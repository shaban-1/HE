# Copyright (C) 2017 NVIDIA Corporation.  All rights reserved.
# Licensed under the CC BY-NC-SA 4.0 license (https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode).

# logger options
image_save_iter: 20000       # How often do you want to save output images during training
display_size: 16          # How often do you want to display output images during training
snapshot_save_iter: 20000     # How often do you want to save trained models
log_iter: 1                   # How often do you want to log the training stats
gpuID: 0

# optimization options
max_iter: 300000             # maximum number of training iterations
batch_size: 16                 # batch size
weight_decay: 0.0001          # weight decay
beta1: 0.                    # Adam parameter
beta2: 0.9                  # Adam parameter
init: kaiming                 # initialization [gaussian/kaiming/xavier/orthogonal]
lr: 0.0001                    # initial learning rate
lr_policy: step               # learning rate scheduler
step_size: 100000             # how often to decay learning rate
gamma: 0.5                    # how much to decay learning rate
gan_w: 1                      # weight of adversarial loss
recon_w: 10                 # weight of image reconstruction loss
recon_h_w: 0                  # weight of hidden reconstruction loss
recon_kl_w: 0.01              # weight of KL loss for reconstruction
recon_cyc_w: 10             # weight of cycle consistency loss
recon_kl_cyc_w: 0.01          # weight of KL loss for cycle consistency
vgg_w: 1.                    # weight of domain-invariant perceptual loss
BGM: 5                       # weight of background Module    @ new add
color: 0.5                       # weight of color loss    @ new add
gan_type: "lsgan"

# model options
gen:
  dim: 64                     # number of filters in the bottommost layer
  activ: relu                 # activation function [relu/lrelu/prelu/selu/tanh]
  n_downsample: 2             # number of downsampling layers in content encoder
  n_res: 4                    # number of residual blocks in content encoder/decoder
  pad_type: reflect           # padding type [zero/reflect]
dis:
  dim: 64                     # number of filters in the bottommost layer
  norm: bn                  # normalization layer [none/bn/in/ln]
  activ: lrelu                # activation function [relu/lrelu/prelu/selu/tanh]
  n_layer: 4                  # number of layers in D
  gan_type: lsgan             # GAN loss [lsgan/nsgan]
  num_scales: 3               # number of scales
  pad_type: reflect           # padding type [zero/reflect]

# data options
input_dim_x: 3                              # number of image channels [1/3]
input_dim_y: 3                              # number of image channels [1/3]
num_workers: 8                              # number of data loading threads
new_size: 64                             # first resize the shortest image side to this size
crop_image_height: 64                      # random crop image of this height
crop_image_width: 64                       # random crop image of this width

data_root_x: /home/dancer/train_datasets/LOL     # train x domain dataset folder location
data_root_y: /home/dancer/train_datasets/EnglightenGAN     # train y domain dataset folder location

